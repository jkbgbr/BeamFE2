from __future__ import division
from numpy import array, zeros
import math
import pprint as pp


class HermitianBeam(object):
    """
    A hermitian 3D FE Beam with 2 nodes and 6 DOFs each node: 3 translational, 3 rotational.
    A 2D version is also available with 3 DOFs each node: 2 translational, 1 rotational.
    Small deformations are assumed.
    Bernoulli-Euler beam theory (no shear deformations)
    Non-restrained torsion only (no warping)
    
    Nodes: i, j with direction i -> j
    Element coordinate system is right-handed, thumb: X, pointing finger Y, middle finger Z
    Displacements are positive when going away from the origin.
    Rotations are positive when clockwise when looking away from the origin. 
    
    Displacement vector u:
    u1 : Node i, displacement in X direction
    u2 : Node i, displacement in Y direction
    u3 : Node i, displacement in Z direction
    u4 : Node i, rotation about X axis
    u5 : Node i, rotation about Y axis
    u6 : Node i, rotation about Z axis
    u7 - u12: same for Node j
    
    """

    def __init__(self, ID=None, i=(0, 0), j=(1, 1), dof=6, E=210000, nu=0.3, Iy=None, Iz=None, A=None):
        self.dof = dof
        self.ID = ID
        self.E = E
        self.nu = nu
        self.i = i
        self.j = j
        self.A = A
        self.Iy = Iy
        self.Iz = Iz

    @property
    def l(self):
        return math.sqrt((self.i[0]-self.j[0])**2 + (self.i[1]-self.j[1])**2)

    @property
    def G(self):
        return self.E

    @property
    def K(self):
        l = self.l
        E_x = self.E * self.A
        G_x = self.G
        EIy_2 = EIy_1 = self.E * self.Iy
        EIz_2 = EIz_1 = self.E * self.Iz

        return array([
            [E_x / l, -E_x / l],
            [-E_x / l, E_x / l],
        ])

        # return array([
        #     [E_x / l, 0, 0, 0, 0, 0, -E_x / l, 0, 0, 0, 0, 0],
        #     [0, 6 * (EIz_1 + EIz_2) / l ** 3, 0, 0, 0, 2 * (2 * EIz_1 + EIz_2) / l ** 2, 0, -6 * (EIz_1 + EIz_2) / l ** 3, 0, 0, 0, 2 * (EIz_1 + 2 * EIz_2) / l ** 2],
        #     [0, 0, 6 * (EIy_1 + EIy_2) / l ** 3, 0, -2 * (2 * EIy_1 + EIy_2) / l ** 2, 0, 0, 0, -6 * (EIy_1 + EIy_2) / l ** 3, 0, -2 * (EIy_1 + 2 * EIy_2) / l ** 2, 0],
        #     [0, 0, 0, G_x / l, 0, 0, 0, 0, 0, -G_x / l, 0, 0], [0, 0, -2 * (2 * EIy_1 + EIy_2) / l ** 2, 0, (3 * EIy_1 + EIy_2) / l, 0, 0, 0, 2 * (2 * EIy_1 + EIy_2) / l ** 2, 0, (EIy_1 + EIy_2) / l, 0],
        #     [0, 2 * (2 * EIz_1 + EIz_2) / l ** 2, 0, 0, 0, (3 * EIz_1 + EIz_2) / l, 0, -2 * (2 * EIz_1 + EIz_2) / l ** 2, 0, 0, 0, (EIz_1 + EIz_2) / l], [-E_x / l, 0, 0, 0, 0, 0, E_x / l, 0, 0, 0, 0, 0],
        #     [0, -6 * (EIz_1 + EIz_2) / l ** 3, 0, 0, 0, -2 * (2 * EIz_1 + EIz_2) / l ** 2, 0, 6 * (EIz_1 + EIz_2) / l ** 3, 0, 0, 0, -2 * (EIz_1 + 2 * EIz_2) / l ** 2],
        #     [0, 0, -6 * (EIy_1 + EIy_2) / l ** 3, 0, 2 * (2 * EIy_1 + EIy_2) / l ** 2, 0, 0, 0, 6 * (EIy_1 + EIy_2) / l ** 3, 0, 2 * (EIy_1 + 2 * EIy_2) / l ** 2, 0],
        #     [0, 0, 0, -G_x / l, 0, 0, 0, 0, 0, G_x / l, 0, 0],
        #     [0, 0, -2 * (EIy_1 + 2 * EIy_2) / l ** 2, 0, (EIy_1 + EIy_2) / l, 0, 0, 0, 2 * (EIy_1 + 2 * EIy_2) / l ** 2, 0, (EIy_1 + 3 * EIy_2) / l, 0],
        #     [0, 2 * (EIz_1 + 2 * EIz_2) / l ** 2, 0, 0, 0, (EIz_1 + EIz_2) / l, 0, -2 * (EIz_1 + 2 * EIz_2) / l ** 2, 0, 0, 0, (EIz_1 + 3 * EIz_2) / l]
        # ])
        #


if __name__ == '__main__':

    beam = HermitianBeam(Iy=100, Iz=100, A=10)

    pp.pprint(beam.K)
    pp.pprint(beam.K**-1)

    F = [1000, 0]

    print(beam.K**-1*F)

    # mi




#
#
#
# # Automatically generated from SymPy in notebook
# # 2014-01-10 17:41:30.751282
#
#
# def mass(l, rho_1, rho_2):
#     return l * (rho_1 + rho_2) / 2
#
#
# def S1(l, rho_1, rho_2):
#     return array([
#         [l * (rho_1 / 3 + rho_2 / 6), 0, 0, 0, 0, 0, l * (rho_1 / 6 + rho_2 / 3), 0, 0, 0, 0, 0],
#         [0, l * (7 * rho_1 / 20 + 3 * rho_2 / 20), 0, 0, 0, l ** 2 * (3 * rho_1 + 2 * rho_2) / 60, 0,
#          l * (3 * rho_1 / 20 + 7 * rho_2 / 20), 0, 0, 0, -l ** 2 * (2 * rho_1 + 3 * rho_2) / 60],
#         [0, 0, l * (7 * rho_1 / 20 + 3 * rho_2 / 20), 0, -l ** 2 * (3 * rho_1 + 2 * rho_2) / 60, 0, 0, 0,
#          l * (3 * rho_1 / 20 + 7 * rho_2 / 20), 0, l ** 2 * (2 * rho_1 + 3 * rho_2) / 60, 0]
#     ])
#
#
# def S2(l, rho_1, rho_2):
#     return [
#         [array([
#             [l * (rho_1 / 4 + rho_2 / 12), 0, 0, 0, 0, 0, l * (rho_1 / 12 + rho_2 / 12), 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [l * (rho_1 / 12 + rho_2 / 12), 0, 0, 0, 0, 0, l * (rho_1 / 12 + rho_2 / 4), 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#         ]),
#             array([
#                 [0, l * (4 * rho_1 / 15 + rho_2 / 12), 0, 0, 0, l ** 2 * (2 * rho_1 + rho_2) / 60, 0,
#                  l * (rho_1 / 15 + rho_2 / 12), 0, 0, 0, -l ** 2 * (rho_1 + rho_2) / 60],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, l * (rho_1 / 12 + rho_2 / 15), 0, 0, 0, l ** 2 * (rho_1 + rho_2) / 60, 0,
#                  l * (rho_1 / 12 + 4 * rho_2 / 15), 0, 0, 0, -l ** 2 * (rho_1 + 2 * rho_2) / 60],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#             ]),
#             array([
#                 [0, 0, l * (4 * rho_1 / 15 + rho_2 / 12), 0, -l ** 2 * (2 * rho_1 + rho_2) / 60, 0, 0, 0,
#                  l * (rho_1 / 15 + rho_2 / 12), 0, l ** 2 * (rho_1 + rho_2) / 60, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, l * (rho_1 / 12 + rho_2 / 15), 0, -l ** 2 * (rho_1 + rho_2) / 60, 0, 0, 0,
#                  l * (rho_1 / 12 + 4 * rho_2 / 15), 0, l ** 2 * (rho_1 + 2 * rho_2) / 60, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#             ])],
#         [array([
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [l * (4 * rho_1 / 15 + rho_2 / 12), 0, 0, 0, 0, 0, l * (rho_1 / 12 + rho_2 / 15), 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [l ** 2 * (2 * rho_1 + rho_2) / 60, 0, 0, 0, 0, 0, l ** 2 * (rho_1 + rho_2) / 60, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [l * (rho_1 / 15 + rho_2 / 12), 0, 0, 0, 0, 0, l * (rho_1 / 12 + 4 * rho_2 / 15), 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [-l ** 2 * (rho_1 + rho_2) / 60, 0, 0, 0, 0, 0, -l ** 2 * (rho_1 + 2 * rho_2) / 60, 0, 0, 0, 0, 0]
#         ]),
#             array([
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, l * (2 * rho_1 / 7 + 3 * rho_2 / 35), 0, 0, 0, l ** 2 * (15 * rho_1 + 7 * rho_2) / 420, 0,
#                  l * (9 * rho_1 / 140 + 9 * rho_2 / 140), 0, 0, 0, -l ** 2 * (7 * rho_1 + 6 * rho_2) / 420],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, l ** 2 * (15 * rho_1 + 7 * rho_2) / 420, 0, 0, 0, l ** 3 * (rho_1 / 168 + rho_2 / 280), 0,
#                  l ** 2 * (6 * rho_1 + 7 * rho_2) / 420, 0, 0, 0, -l ** 3 * (rho_1 + rho_2) / 280],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, l * (9 * rho_1 / 140 + 9 * rho_2 / 140), 0, 0, 0, l ** 2 * (6 * rho_1 + 7 * rho_2) / 420, 0,
#                  l * (3 * rho_1 / 35 + 2 * rho_2 / 7), 0, 0, 0, -l ** 2 * (7 * rho_1 + 15 * rho_2) / 420],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, -l ** 2 * (7 * rho_1 + 6 * rho_2) / 420, 0, 0, 0, -l ** 3 * (rho_1 + rho_2) / 280, 0,
#                  -l ** 2 * (7 * rho_1 + 15 * rho_2) / 420, 0, 0, 0, l ** 3 * (rho_1 / 280 + rho_2 / 168)]
#             ]),
#             array([
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, l * (2 * rho_1 / 7 + 3 * rho_2 / 35), 0, -l ** 2 * (15 * rho_1 + 7 * rho_2) / 420, 0, 0,
#                  0, l * (9 * rho_1 / 140 + 9 * rho_2 / 140), 0, l ** 2 * (7 * rho_1 + 6 * rho_2) / 420, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, l ** 2 * (15 * rho_1 + 7 * rho_2) / 420, 0, -l ** 3 * (rho_1 / 168 + rho_2 / 280), 0, 0,
#                  0, l ** 2 * (6 * rho_1 + 7 * rho_2) / 420, 0, l ** 3 * (rho_1 + rho_2) / 280, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, l * (9 * rho_1 / 140 + 9 * rho_2 / 140), 0, -l ** 2 * (6 * rho_1 + 7 * rho_2) / 420, 0,
#                  0, 0, l * (3 * rho_1 / 35 + 2 * rho_2 / 7), 0, l ** 2 * (7 * rho_1 + 15 * rho_2) / 420, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, -l ** 2 * (7 * rho_1 + 6 * rho_2) / 420, 0, l ** 3 * (rho_1 + rho_2) / 280, 0, 0, 0,
#                  -l ** 2 * (7 * rho_1 + 15 * rho_2) / 420, 0, -l ** 3 * (rho_1 / 280 + rho_2 / 168), 0]
#             ])],
#         [array([
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [l * (4 * rho_1 / 15 + rho_2 / 12), 0, 0, 0, 0, 0, l * (rho_1 / 12 + rho_2 / 15), 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [-l ** 2 * (2 * rho_1 + rho_2) / 60, 0, 0, 0, 0, 0, -l ** 2 * (rho_1 + rho_2) / 60, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [l * (rho_1 / 15 + rho_2 / 12), 0, 0, 0, 0, 0, l * (rho_1 / 12 + 4 * rho_2 / 15), 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [l ** 2 * (rho_1 + rho_2) / 60, 0, 0, 0, 0, 0, l ** 2 * (rho_1 + 2 * rho_2) / 60, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#         ]),
#             array([
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, l * (2 * rho_1 / 7 + 3 * rho_2 / 35), 0, 0, 0, l ** 2 * (15 * rho_1 + 7 * rho_2) / 420, 0,
#                  l * (9 * rho_1 / 140 + 9 * rho_2 / 140), 0, 0, 0, -l ** 2 * (7 * rho_1 + 6 * rho_2) / 420],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, -l ** 2 * (15 * rho_1 + 7 * rho_2) / 420, 0, 0, 0, -l ** 3 * (rho_1 / 168 + rho_2 / 280), 0,
#                  -l ** 2 * (6 * rho_1 + 7 * rho_2) / 420, 0, 0, 0, l ** 3 * (rho_1 + rho_2) / 280],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, l * (9 * rho_1 / 140 + 9 * rho_2 / 140), 0, 0, 0, l ** 2 * (6 * rho_1 + 7 * rho_2) / 420, 0,
#                  l * (3 * rho_1 / 35 + 2 * rho_2 / 7), 0, 0, 0, -l ** 2 * (7 * rho_1 + 15 * rho_2) / 420],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, l ** 2 * (7 * rho_1 + 6 * rho_2) / 420, 0, 0, 0, l ** 3 * (rho_1 + rho_2) / 280, 0,
#                  l ** 2 * (7 * rho_1 + 15 * rho_2) / 420, 0, 0, 0, -l ** 3 * (rho_1 / 280 + rho_2 / 168)],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#             ]),
#             array([
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, l * (2 * rho_1 / 7 + 3 * rho_2 / 35), 0, -l ** 2 * (15 * rho_1 + 7 * rho_2) / 420, 0, 0,
#                  0, l * (9 * rho_1 / 140 + 9 * rho_2 / 140), 0, l ** 2 * (7 * rho_1 + 6 * rho_2) / 420, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, -l ** 2 * (15 * rho_1 + 7 * rho_2) / 420, 0, l ** 3 * (rho_1 / 168 + rho_2 / 280), 0, 0,
#                  0, -l ** 2 * (6 * rho_1 + 7 * rho_2) / 420, 0, -l ** 3 * (rho_1 + rho_2) / 280, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, l * (9 * rho_1 / 140 + 9 * rho_2 / 140), 0, -l ** 2 * (6 * rho_1 + 7 * rho_2) / 420, 0,
#                  0, 0, l * (3 * rho_1 / 35 + 2 * rho_2 / 7), 0, l ** 2 * (7 * rho_1 + 15 * rho_2) / 420, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, l ** 2 * (7 * rho_1 + 6 * rho_2) / 420, 0, -l ** 3 * (rho_1 + rho_2) / 280, 0, 0, 0,
#                  l ** 2 * (7 * rho_1 + 15 * rho_2) / 420, 0, l ** 3 * (rho_1 / 280 + rho_2 / 168), 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#             ])]
#     ]
#
#
# def K(l, E_x, G_x, EIy_1, EIy_2, EIz_1, EIz_2):
#     return array([
#         [E_x / l, 0, 0, 0, 0, 0, -E_x / l, 0, 0, 0, 0, 0],
#         [0, 6 * (EIz_1 + EIz_2) / l ** 3, 0, 0, 0, 2 * (2 * EIz_1 + EIz_2) / l ** 2, 0,
#          -6 * (EIz_1 + EIz_2) / l ** 3, 0, 0, 0, 2 * (EIz_1 + 2 * EIz_2) / l ** 2],
#         [0, 0, 6 * (EIy_1 + EIy_2) / l ** 3, 0, -2 * (2 * EIy_1 + EIy_2) / l ** 2, 0, 0, 0,
#          -6 * (EIy_1 + EIy_2) / l ** 3, 0, -2 * (EIy_1 + 2 * EIy_2) / l ** 2, 0],
#         [0, 0, 0, G_x / l, 0, 0, 0, 0, 0, -G_x / l, 0, 0],
#         [0, 0, -2 * (2 * EIy_1 + EIy_2) / l ** 2, 0, (3 * EIy_1 + EIy_2) / l, 0, 0, 0,
#          2 * (2 * EIy_1 + EIy_2) / l ** 2, 0, (EIy_1 + EIy_2) / l, 0],
#         [0, 2 * (2 * EIz_1 + EIz_2) / l ** 2, 0, 0, 0, (3 * EIz_1 + EIz_2) / l, 0,
#          -2 * (2 * EIz_1 + EIz_2) / l ** 2, 0, 0, 0, (EIz_1 + EIz_2) / l],
#         [-E_x / l, 0, 0, 0, 0, 0, E_x / l, 0, 0, 0, 0, 0],
#         [0, -6 * (EIz_1 + EIz_2) / l ** 3, 0, 0, 0, -2 * (2 * EIz_1 + EIz_2) / l ** 2, 0,
#          6 * (EIz_1 + EIz_2) / l ** 3, 0, 0, 0, -2 * (EIz_1 + 2 * EIz_2) / l ** 2],
#         [0, 0, -6 * (EIy_1 + EIy_2) / l ** 3, 0, 2 * (2 * EIy_1 + EIy_2) / l ** 2, 0, 0, 0,
#          6 * (EIy_1 + EIy_2) / l ** 3, 0, 2 * (EIy_1 + 2 * EIy_2) / l ** 2, 0],
#         [0, 0, 0, -G_x / l, 0, 0, 0, 0, 0, G_x / l, 0, 0],
#         [0, 0, -2 * (EIy_1 + 2 * EIy_2) / l ** 2, 0, (EIy_1 + EIy_2) / l, 0, 0, 0,
#          2 * (EIy_1 + 2 * EIy_2) / l ** 2, 0, (EIy_1 + 3 * EIy_2) / l, 0],
#         [0, 2 * (EIz_1 + 2 * EIz_2) / l ** 2, 0, 0, 0, (EIz_1 + EIz_2) / l, 0,
#          -2 * (EIz_1 + 2 * EIz_2) / l ** 2, 0, 0, 0, (EIz_1 + 3 * EIz_2) / l]
#     ])
#
#
# def Ks(l):
#     return array([
#         [1 / l, 0, 0, 0, 0, 0, -1 / l, 0, 0, 0, 0, 0],
#         [0, 6 / (5 * l), 0, 0, 0, 1 / 10, 0, -6 / (5 * l), 0, 0, 0, 1 / 10],
#         [0, 0, 6 / (5 * l), 0, -1 / 10, 0, 0, 0, -6 / (5 * l), 0, -1 / 10, 0],
#         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#         [0, 0, -1 / 10, 0, 2 * l / 15, 0, 0, 0, 1 / 10, 0, -l / 30, 0],
#         [0, 1 / 10, 0, 0, 0, 2 * l / 15, 0, -1 / 10, 0, 0, 0, -l / 30],
#         [-1 / l, 0, 0, 0, 0, 0, 1 / l, 0, 0, 0, 0, 0],
#         [0, -6 / (5 * l), 0, 0, 0, -1 / 10, 0, 6 / (5 * l), 0, 0, 0, -1 / 10],
#         [0, 0, -6 / (5 * l), 0, 1 / 10, 0, 0, 0, 6 / (5 * l), 0, 1 / 10, 0],
#         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#         [0, 0, -1 / 10, 0, -l / 30, 0, 0, 0, 1 / 10, 0, 2 * l / 15, 0],
#         [0, 1 / 10, 0, 0, 0, -l / 30, 0, -1 / 10, 0, 0, 0, 2 * l / 15]
#     ])
#
#
# def F1(l):
#     return array([
#         [l / 2, 0, 0, 0, 0, 0, l / 2, 0, 0, 0, 0, 0],
#         [0, l / 2, 0, 0, 0, 0, 0, l / 2, 0, 0, 0, 0],
#         [0, 0, l / 2, 0, 0, 0, 0, 0, l / 2, 0, 0, 0]
#     ])
#
#
# def F2(l):
#     return [
#         [array([
#             [l / 3, 0, 0, 0, 0, 0, l / 6, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [l / 6, 0, 0, 0, 0, 0, l / 3, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#         ]),
#             array([
#                 [0, l / 3, 0, 0, 0, 0, 0, l / 6, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, l / 6, 0, 0, 0, 0, 0, l / 3, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#             ]),
#             array([
#                 [0, 0, l / 3, 0, 0, 0, 0, 0, l / 6, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, l / 6, 0, 0, 0, 0, 0, l / 3, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#             ])],
#         [array([
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [7 * l / 20, 0, 0, 0, 0, 0, 3 * l / 20, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [l ** 2 / 20, 0, 0, 0, 0, 0, l ** 2 / 30, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [3 * l / 20, 0, 0, 0, 0, 0, 7 * l / 20, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [-l ** 2 / 30, 0, 0, 0, 0, 0, -l ** 2 / 20, 0, 0, 0, 0, 0]
#         ]),
#             array([
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 7 * l / 20, 0, 0, 0, 0, 0, 3 * l / 20, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, l ** 2 / 20, 0, 0, 0, 0, 0, l ** 2 / 30, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 3 * l / 20, 0, 0, 0, 0, 0, 7 * l / 20, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, -l ** 2 / 30, 0, 0, 0, 0, 0, -l ** 2 / 20, 0, 0, 0, 0]
#             ]),
#             array([
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 7 * l / 20, 0, 0, 0, 0, 0, 3 * l / 20, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, l ** 2 / 20, 0, 0, 0, 0, 0, l ** 2 / 30, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 3 * l / 20, 0, 0, 0, 0, 0, 7 * l / 20, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, -l ** 2 / 30, 0, 0, 0, 0, 0, -l ** 2 / 20, 0, 0, 0]
#             ])],
#         [array([
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [7 * l / 20, 0, 0, 0, 0, 0, 3 * l / 20, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [-l ** 2 / 20, 0, 0, 0, 0, 0, -l ** 2 / 30, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [3 * l / 20, 0, 0, 0, 0, 0, 7 * l / 20, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#             [l ** 2 / 30, 0, 0, 0, 0, 0, l ** 2 / 20, 0, 0, 0, 0, 0],
#             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#         ]),
#             array([
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 7 * l / 20, 0, 0, 0, 0, 0, 3 * l / 20, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, -l ** 2 / 20, 0, 0, 0, 0, 0, -l ** 2 / 30, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 3 * l / 20, 0, 0, 0, 0, 0, 7 * l / 20, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, l ** 2 / 30, 0, 0, 0, 0, 0, l ** 2 / 20, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#             ]),
#             array([
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 7 * l / 20, 0, 0, 0, 0, 0, 3 * l / 20, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, -l ** 2 / 20, 0, 0, 0, 0, 0, -l ** 2 / 30, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, 3 * l / 20, 0, 0, 0, 0, 0, 7 * l / 20, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#                 [0, 0, l ** 2 / 30, 0, 0, 0, 0, 0, l ** 2 / 20, 0, 0, 0],
#                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#             ])]
#     ]
